package com.noahcharlton.robogeddon.ui.mainmenu;import com.badlogic.gdx.Gdx;import com.badlogic.gdx.utils.Align;import com.noahcharlton.robogeddon.Core;import com.noahcharlton.robogeddon.util.log.Log;import com.noahcharlton.robogeddon.settings.KeySetting;import com.noahcharlton.robogeddon.settings.Setting;import com.noahcharlton.robogeddon.settings.SettingsIO;import com.noahcharlton.robogeddon.ui.widget.*;public class SettingsScreen extends MainMenuSubScreen {    private final Stack centerPane = new Stack();    public SettingsScreen() {        super("Settings");        buildCenterPane();        add(centerPane).align(Align.center);    }    private void buildCenterPane() {        centerPane.getChildren().clear();        for(Setting setting : Core.settings.getOrderedValues()) {            if(!setting.isOnSettingsScreen())                continue;            var layout = new PairLayout()                    .setLeft(new Label(setting.getName()).setWrap(false).setSize(150, 30))                    .setRight(createButton(setting));            centerPane.add(layout);        }        centerPane.add(new PairLayout()                .setLeft(new TextButton("Save").setOnClick((clickEvent, button) -> SettingsIO.save())                        .pad().top(50).left(50))                .setRight(new TextButton("Reset To Default").setOnClick((clickEvent, button) -> {                    Log.info("Resetting settings to default");                    Core.settings.getOrderedValues().forEach(Setting::resetToDefault);                    Gdx.app.postRunnable(this::buildCenterPane);                }).pad().top(50).right(50)));        invalidateHierarchy();    }    private Widget createButton(Setting setting) {        Button button;        if(setting instanceof KeySetting) {            button = new KeySettingButton(setting.getButtonText(), (KeySetting) setting);        } else {            button = new TextButton(setting.getButtonText());        }        return button.setOnClick((clickEvent, b) -> onButtonClicked(setting)).setSize(150, 30f);    }    private void onButtonClicked(Setting setting) {        setting.onButtonClick();        setting.apply();        Gdx.app.postRunnable(this::buildCenterPane);    }}